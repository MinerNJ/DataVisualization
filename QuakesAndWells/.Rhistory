install.packages("tidyverse")
install.packages("ggplot2")
package(tidyverse)
library(readr)
coluexrtact_fulldataset_csv <- read_csv("coluexrtact_fulldataset.csv.crdownload")
View(coluexrtact_fulldataset_csv)
attach(coluexrtact_fulldataset_csv)
plot(lm(BADGE~DUE))
asdf
asdf
library(readr)
NewYork <- read_csv("NYC_Free_Public_WiFi_03292017.csv")
View(NewYork)
NYC <- data.frame(newyork$LAT,newyork$LON)
NYC <- data.frame(NewYork$LAT,newyork$LON)
NYC <- data.frame(NewYork$LAT,NewYork$LON)
newyork <- NewYork
attach(newyork)
newyorkdf<-data.frame(newyork$LAT,newyork$LON)
wss <- (nrow(newyorkdf)-1)*sum(apply(newyorkdf,2,var))
for (i in 2:20) wss[i] <- sum(kmeans(newyorkdf,
centers=i)$withinss)
plot(1:20, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(20)
library(ggplot2)
fit <- kmeans(newyorkdf, 11) # 11 cluster solution
aggregate(newyorkdf,by=list(fit$cluster),FUN=mean)
newyorkdf <- data.frame(newyorkdf, fit$cluster)
newyorkdf
newyorkdf$fit.cluster <- as.factor(newyorkdf$fit.cluster)
ggplot(newyorkdf, aes(x=newyork.LON, y=newyork.LAT, color = newyorkdf$fit.cluster)) + geom_point()
View(newyorkdf)
View(newyorkdf)
devtools::install_github("zachcp/nycmaps")
install.packages("devtools")
devtools::install_github("zachcp/nycmaps")
devtools::install_github("zachcp/nycmaps")
devtools::install_github("zachcp/nycmaps")
map(database="nyc")
library(nycmaps)
map(database="nyc")
nyc <- map_data("nyc")
gg  <- ggplot()
gg  <- gg +
geom_map(data=nyc, map=nyc, aes(x=long, y=lat, map_id=region))
gg + geom_point(data = newyorkdf, aes(x = newyork.LON, y = newyork.LAT), colour = newyorkdf$fit.cluster, alpha = .5) + ggtitle("New York Public WiFi")
library(readr)
WiFi_Access_Points <- read_csv("WiFi_Access_Points.csv")
View(WiFi_Access_Points)
library(readr)
ohiowifi <- read_csv("WiFi_Access_Points.csv")
View(ohiowifi)
knitr::opts_chunk$set(echo = TRUE)
wss <- (nrow(ohiodf)-1)*sum(apply(ohiodf,2,var))
ohiodf <- data.frame(ohiowifi$X)
wss <- (nrow(ohiodf)-1)*sum(apply(ohiodf,2,var))
for (i in 2:20) wss[i] <- sum(kmeans(ohiodf,
centers=i)$withinss)
plot(1:20, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
wss <- (nrow(ohiodf)-1)*sum(apply(ohiodf,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(ohiodf,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
library(maps)
?maps
??maps
map(database = "ohio")
map("ohio")
map(ohio)
map("state","ohio")
map(database = "columbus")
ohio <- map_data("ohio")
?map_data
map("county","ohio")
map("city","ohio")
map("county","ohio")
ohio <- map_data(state, "ohio")
ohio <- map_data(maps::state(), "ohio")
data("stateMapEnv")
ohio <- map_data(maps::state(), "ohio")
map("county","ohio")
data("stateMapEnv")
map("county","ohio")
set.seed(20)
fit <- kmeans(ohiodf, 11) # 11 cluster solution
# get cluster means
aggregate(ohiodf,by=list(fit$cluster),FUN=mean)
# append cluster assignment
ohiodf <- data.frame(ohiodf, ohiodf$fit.cluster)
set.seed(20)
fit <- kmeans(ohiodf, 5) # 11 cluster solution
# get cluster means
aggregate(ohiodf,by=list(fit$cluster),FUN=mean)
# append cluster assignment
ohiodf <- data.frame(ohiodf, ohiodf$fit.cluster)
set.seed(20)
fit <- kmeans(ohiodf, 11) # 11 cluster solution
# get cluster means
aggregate(ohiodf,by=list(fit$cluster),FUN=mean)
# append cluster assignment
ohiodf <- data.frame(ohiodf, fit$cluster)
ohiodf
ohiodf$fit.cluster <- as.factor(ohiodf$fit.cluster)
library(ggplot2)
ggplot(ohiodf, aes(x=ohiowifi$X, y=ohiowifi$Y, color = ohiodf$fit.cluster)) + geom_point()
ohiomap <- map("county","ohio")
ohio <- map_data(ohiomap)
ohio <- map_data(map("county", "ohio"))
gg  <- gg +
geom_map(
data=ohiomap,
map=ohiomap,
aes(x=ohiowifi$X, y=ohiowifi$Y, map_id=region))
gg  <- ggplot()
gg  <- gg +
geom_map(
data=ohiomap,
map=ohiomap,
aes(x=ohiowifi$X, y=ohiowifi$Y, map_id=region))
ohio <- map_data(state, "ohio")
ohio <- map_data("state", "ohio")
ohio <- map_data("county", "ohio")
ohio <- map_data("county", "ohio")
gg  <- ggplot()
gg  <- gg +
geom_map(
data=ohio,
map=ohio,
aes(x=ohiowifi$X, y=ohiowifi$Y, map_id=region))
gg +
geom_point(data = newyorkdf, aes(x = newyork.LON, y = newyork.LAT),
colour = newyorkdf$fit.cluster, alpha = .5) + ggtitle("New York Public WiFi")
ohio <- map_data("county", "ohio")
gg  <- ggplot()
gg  <- gg +
geom_map(
data=ohio,
map=ohio,
aes(x=ohiowifi$X, y=ohiowifi$Y, map_id=region))
gg +
geom_point(data = ohiodf, aes(x = ohiowifi$X, y = ohiowifi$Y),
colour = ohiodf$fit.cluster, alpha = .5) + ggtitle("Ohio Public WiFi")
ohiodf <- data.frame(ohiowifi$X, ohiowifi$Y)
wss <- (nrow(ohiodf)-1)*sum(apply(ohiodf,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(ohiodf,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(20)
fit <- kmeans(ohiodf, 11) # 11 cluster solution
# get cluster means
aggregate(ohiodf,by=list(fit$cluster),FUN=mean)
# append cluster assignment
ohiodf <- data.frame(ohiodf, fit$cluster)
ohiodf
ohiodf$fit.cluster <- as.factor(ohiodf$fit.cluster)
library(ggplot2)
ggplot(ohiodf, aes(x=ohiowifi$X, y=ohiowifi$Y, color = ohiodf$fit.cluster)) + geom_point()
data("stateMapEnv")
ohiomap <- map("county","ohio")
ohio <- map_data("county", "ohio")
gg  <- ggplot()
gg  <- gg +
geom_map(
data=ohio,
map=ohio,
aes(x=ohiowifi$X, y=ohiowifi$Y, map_id=region))
gg +
geom_point(data = ohiodf, aes(x = ohiowifi$X, y = ohiowifi$Y),
colour = ohiodf$fit.cluster, alpha = .5) + ggtitle("Ohio Public WiFi")
ohio <- map_data("county", "ohio")
gg  <- ggplot()
gg  <- gg + geom_map(data=ohio, map=ohio,
aes(x=ohiowifi$X, y=ohiowifi$Y, map_id=region))
ohio <- map_data("county", "ohio")
gg  <- ggplot()
gg  <- gg + geom_map(data=ohio, map=ohio,
aes(ohiowifi$X, ohiowifi$Y, map_id=region))
gg + geom_point(data = ohiodf, aes(x = ohiowifi$X, y = ohiowifi$Y), colour = ohiodf$fit.cluster, alpha = .5) + ggtitle("Ohio Public WiFi")
ohio <- map_data("county", "ohio")
gg  <- ggplot()
gg  <- gg + geom_map(data=ohio, map=ohio,
aes(x = ohiowifi$X, y = ohiowifi$Y, map_id=region))
ohio <- map_data("county", "ohio")
gg  <- ggplot()
gg  <- gg + geom_map(data=ohio, map=ohio,
aes(x = LON, y = LAT, map_id=region))
?aes
gg  <- gg + geom_map(data=ohio, map=ohio,
aes(x=ohiowifi$X, y=ohiowifi$Y))
gg + geom_point(data = ohiodf, aes(x = ohiowifi$X, y = ohiowifi$Y), colour = ohiodf$fit.cluster, alpha = .5) + ggtitle("Ohio Public WiFi")
?geom_map
gg  <- gg + geom_map(data=ohio, map=ohio) +
aes(x=ohiowifi$X, y=ohiowifi$Y)
gg + geom_point(data = ohiodf, aes(x = ohiowifi$X, y = ohiowifi$Y), colour = ohiodf$fit.cluster, alpha = .5) + ggtitle("Ohio Public WiFi")
gg
ohiomap + ggplot(ohiodf, aes(x=ohiowifi$X, y=ohiowifi$Y, color = ohiodf$fit.cluster)) + geom_point()
ggplot(ohiomap) + ggplot(ohiodf, aes(x=ohiowifi$X, y=ohiowifi$Y, color = ohiodf$fit.cluster)) + geom_point()
fit <- kmeans(ohiodf, 3) # 11 cluster solution
fit <- kmeans(ohiodf, 7) # 11 cluster solution
# get cluster means
aggregate(ohiodf,by=list(fit$cluster),FUN=mean)
# get cluster means
aggregate(ohiodf, by=list(fit$cluster),FUN=mean, na.rm = TRUE)
fit <- kmeans(ohiodf, 11) # 11 cluster solution
# get cluster means
aggregate(ohiodf, by=list(fit$cluster),FUN=mean, na.rm = TRUE)
?aggregate
?kmeans
View(ohiodf)
fit <- kmeans(ohiodf, 7) # 11 cluster solution
View(ohiodf)
# get cluster means
aggregate(ohiodf, by=list(fit$cluster),FUN=mean, na.rm = TRUE)
# append cluster assignment
ohiodf <- data.frame(ohiodf, fit$cluster)
View(ohiodf)
View(ohiodf)
ggplot(ohiodf, aes(x=ohiowifi$X, y=ohiowifi$Y, color = ohiodf$fit.cluster)) + geom_point()
knitr::opts_chunk$set(echo = TRUE)
setwd("~")
setwd("C:/Users/WeCanCodeIT/ai/default-workspace/DataVizinR/QuakesAndWells")
setwd("~")
setwd("~")
setwd("C:/Users/WeCanCodeIT/ai/default-workspace/DataVizinR/QuakesAndWells")
knitr::opts_chunk$set(echo = TRUE)
setwd("~")
setwd("C:/Users/WeCanCodeIT/wcci/default-workspace/DataVizinR/QuakesAndWells")
library(maps)
